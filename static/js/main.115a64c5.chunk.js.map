{"version":3,"sources":["serviceWorker.js","CompJumbotron/CompJumbotron.jsx","ComponentService/CompService.jsx","Home-Pages/Home.jsx","ComponentNavbar/CompNavbar.jsx","index.js"],"names":["Boolean","window","location","hostname","match","BoxComponent","id","Row","Col","xl","sm","xs","Card","body","className","color","animation","size","name","type","Button","lg","CompJumbotron","Jumbotron","Container","React","Component","CompService","md","CardHeader","CardBody","CardTitle","CardText","CompHome","CompNavbar","props","useState","isOpen","setIsOpen","Navbar","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","to","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","ReactDOM","render","StrictMode","path","exact","component","CompHomes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.115a64c5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport 'boxicons'\r\nimport { Alert, Jumbotron, Button, Container, Row, Col, Card, CardTitle, CardText } from 'reactstrap';\r\n\r\n\r\n\r\n\r\nconst BoxComponent = () => {\r\n  return (\r\n    <div id=\"CompBoxJumbotrons\">\r\n      <Row>\r\n        <Col xl=\"3\" sm=\"6\" xs=\"12\" >\r\n          <Card id=\"CardCompBoxIcon\" body>\r\n            <div className=\"text-center\">\r\n              <box-icon color=\"red\" animation=\"tada-hover\" size=\"lg\" name='html5' type='logo' ></box-icon>\r\n            </div>\r\n            <Button>HTML</Button>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"3\" sm=\"6\" xs=\"12\">\r\n          <Card id=\"CardCompBoxIcon\" body>\r\n            <div className=\"text-center\">\r\n              <box-icon color=\"blue\" animation=\"tada-hover\" size=\"lg\" name='css3' type='logo' ></box-icon>\r\n            </div>\r\n            <Button>CSS</Button>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"3\" sm=\"6\" xs=\"12\">\r\n          <Card id=\"CardCompBoxIcon\" body>\r\n            <div className=\"text-center\">\r\n              <box-icon color=\"yellowgreen\" animation=\"tada-hover\" size=\"lg\" name='javascript' type='logo' ></box-icon>\r\n            </div>\r\n            <Button>JAVASCRIPT</Button>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"3\" sm=\"6\" xs=\"12\">\r\n          <Card id=\"CardCompBoxIcon\" body>\r\n            <div className=\"text-center\">\r\n              <box-icon color=\"purple\" animation=\"tada-hover\" size=\"lg\" name='bootstrap' type='logo' ></box-icon>\r\n            </div>\r\n            <Button>BOOTSTRAP</Button>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </div >\r\n  )\r\n\r\n}\r\n\r\nclass CompJumbotron extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n\r\n      <Jumbotron id=\"CompJumbotron\" className=\"d-flex align-items-center flex-column\">\r\n        <Row>\r\n          <div id=\"CompBoxJumbotrons_Content\">\r\n            <Col>\r\n              <h1 className=\"font-weight-bold text-white \">Belajar Budi Daya Code Bersama DeveloperKids</h1>\r\n              <hr className=\"my-2 mt-3\" color=\"text-primary\" />\r\n              <p className=\"lead\">Jangan tunggu nanti, tanamlah sekarang biar cepat panen!</p>\r\n              <p className=\"lead\">\r\n                <Button className=\"border-fuchsia\">Learn More!</Button>\r\n              </p>\r\n            </Col>\r\n\r\n          </div>\r\n        </Row>\r\n        <Container>\r\n          <BoxComponent />\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompJumbotron;","import React from 'react';\r\nimport {\r\n  Card, Button, CardHeader, CardFooter, CardBody,\r\n  CardTitle, CardText, Row, Col, Container\r\n} from 'reactstrap';\r\n\r\nclass CompService extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n\r\n            <Col lg=\"3\" md=\"6\" xs=\"12 mb-2 mt-4 text-center\">\r\n              <Card>\r\n\r\n                <CardHeader className=\"text-center bg-danger\">HTML</CardHeader>\r\n                <CardBody>\r\n                  <CardTitle>Special Title Treatment</CardTitle>\r\n                  <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                  <Button className=\"btn-outline-primary\">Go somewhere</Button>\r\n                </CardBody>\r\n\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" md=\"6\" xs=\"12 mb-2 mt-4 text-center\">\r\n              <Card>\r\n                <CardHeader className=\"text-center bg-danger\">CSS</CardHeader>\r\n                <CardBody>\r\n                  <CardTitle>Special Title Treatment</CardTitle>\r\n                  <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                  <Button className=\"btn-outline-primary\">Go somewhere</Button>\r\n                </CardBody>\r\n\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" md=\"6\" xs=\"12 mb-2 mt-4 text-center\">\r\n              <Card>\r\n                <CardHeader className=\"text-center bg-danger\">JAVASCRIPT</CardHeader>\r\n                <CardBody>\r\n                  <CardTitle>Special Title Treatment</CardTitle>\r\n                  <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                  <Button className=\"btn-outline-primary\">Go somewhere</Button>\r\n                </CardBody>\r\n\r\n              </Card>\r\n            </Col>\r\n            <Col lg=\"3\" md=\"6\" xs=\"12 mb-2 mt-4 text-center\">\r\n              <Card>\r\n                <CardHeader className=\"text-center bg-danger\">REACT JS</CardHeader>\r\n                <CardBody>\r\n                  <CardTitle>Special Title Treatment</CardTitle>\r\n                  <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n                  <Button className=\"btn-outline-primary\">Go somewhere</Button>\r\n                </CardBody>\r\n\r\n\r\n              </Card>\r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompService;","import React, { Fragment } from 'react';\r\nimport CompJumbotron from '../CompJumbotron/CompJumbotron'\r\nimport CompService from '../ComponentService/CompService';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CompHome extends React.Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <CompJumbotron />\r\n        <CompService />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CompHome;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText, Container\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, BrowserRouter\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst CompNavbar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n\r\n    <Navbar color=\"info\" expand=\"md\" id=\"Navbar\">\r\n      <Container>\r\n        <NavbarBrand id=\"NavbarBrand\" href=\"/hello\">DeveloperKids</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto \" navbar>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link id=\"Link\" to=\"/hello\">Home</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link id=\"Link\" to=\"/tentang-kami\">TentangKami</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Tutorial\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  <Link to=\"/list-learn-html\">HTML</Link>\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  <Link to=\"/list-learn-css\">CSS</Link>\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  <Link to=\"/list-learn-javascript\">JAVASCRIPT</Link>\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nexport default CompNavbar;","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/style.css';\nimport * as serviceWorker from './serviceWorker';\nimport CompHomes from './Home-Pages/Home';\nimport CompNavbars from './ComponentNavbar/CompNavbar';\n\n\nimport { BrowserRouter as Router, Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Fragment>\n        <div>\n          < CompNavbars />\n        </div>\n        <Route path=\"/hello\" exact component={CompHomes} />\n        \\\n\n\n      </Fragment>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}